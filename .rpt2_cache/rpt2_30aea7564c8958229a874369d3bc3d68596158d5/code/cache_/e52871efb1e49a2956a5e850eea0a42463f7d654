{"code":"/**\r\n *\r\n * Decorator used to indicate that the Class Constructor should have a\r\n * static method called Construct which should take an object and return an\r\n * instance of the class.\r\n * @constructor\r\n */\r\nexport function StaticImplements() {\r\n    // @ts-ignore\r\n    // noinspection JSUnusedLocalSymbols\r\n    return function (constructor) { return T; };\r\n}\r\n","dtsmap":{"name":"/Users/justinbeaudry/Projects/advent/typeHelpers.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"typeHelpers.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/typeHelpers.ts\"],\"names\":[],\"mappings\":\"AACA,MAAM,WAAW,eAAe,CAAC,CAAC,EAAE,CAAC;IACnC,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;CACzB;AACD;;;;;;GAMG;AACH,wBAAgB,gBAAgB,CAAC,CAAC,EAAE,CAAC,iDAIpC\"}"},"dts":{"name":"/Users/justinbeaudry/Projects/advent/typeHelpers.d.ts","writeByteOrderMark":false,"text":"export interface StaticConstruct<T, U> {\r\n    Construct(params: U): T;\r\n}\r\n/**\r\n *\r\n * Decorator used to indicate that the Class Constructor should have a\r\n * static method called Construct which should take an object and return an\r\n * instance of the class.\r\n * @constructor\r\n */\r\nexport declare function StaticImplements<T, U>(): (constructor: StaticConstruct<T, U>) => any;\r\n//# sourceMappingURL=typeHelpers.d.ts.map"}}
