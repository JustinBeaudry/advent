{"code":"import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nvar AdventHTTPTransport = /** @class */ (function () {\r\n    function AdventHTTPTransport(uri, batchSize) {\r\n        this.writing = false;\r\n        this.batch = [];\r\n        this.uri = uri;\r\n        this.batchSize = batchSize;\r\n    }\r\n    AdventHTTPTransport.Construct = function (_a) {\r\n        var uri = _a.uri, batchSize = _a.batchSize;\r\n        return new AdventHTTPTransport(uri, batchSize);\r\n    };\r\n    AdventHTTPTransport.prototype.write = function (event) {\r\n        var _this = this;\r\n        if (this.batch.length < this.batchSize) {\r\n            this.batch.push(event);\r\n            return;\r\n        }\r\n        if (this.writing) {\r\n            return;\r\n        }\r\n        this.writing = true;\r\n        window.fetch(this.uri, {\r\n            body: JSON.stringify(this.getNextBatch()),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST'\r\n        })\r\n            .then(function (response) {\r\n            if (response.status < 300) {\r\n                window.console.warn(\"[ADVENT] HTTP Transport POST request to \" + _this.uri + \" returned a non-200 status code\");\r\n                window.console.error(response.statusText);\r\n            }\r\n            _this.writing = false;\r\n        })\r\n            .catch(function (err) {\r\n            window.console.error(err);\r\n            _this.writing = false;\r\n        });\r\n    };\r\n    AdventHTTPTransport.prototype.getNextBatch = function () {\r\n        var batchSize;\r\n        if (this.batch.length < this.batchSize) {\r\n            batchSize = this.batch.length;\r\n        }\r\n        else {\r\n            batchSize = this.batchSize;\r\n        }\r\n        var nextBatch = this.batch.slice(0, batchSize);\r\n        this.batch.splice(0, batchSize);\r\n        return nextBatch;\r\n    };\r\n    return AdventHTTPTransport;\r\n}());\r\nexport { AdventHTTPTransport };\r\n","dtsmap":{"name":"/Users/justinbeaudry/Projects/advent/transports/http.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"http.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/transports/http.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,kBAAkB,CAAC;AAC1B,OAAO,cAAc,CAAC;AACtB,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AACvC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAE/C,qBAAa,mBAAoB,YAAW,eAAe;WAC3C,SAAS,CAAC,EACtB,GAAG,EACH,SAAS,EACV,EAAE;QACD,GAAG,EAAE,MAAM,CAAC;QACZ,SAAS,EAAE,MAAM,CAAA;KAClB,GAAG,mBAAmB;IAGvB,OAAO,CAAC,OAAO,CAAkB;IACjC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAS;IAC7B,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAS;IACnC,OAAO,CAAC,KAAK,CAAqB;IAClC,OAAO;IAIA,KAAK,CAAC,KAAK,EAAE,WAAW,GAAG,IAAI;IA4BtC,OAAO,CAAC,YAAY;CAWrB\"}"},"dts":{"name":"/Users/justinbeaudry/Projects/advent/transports/http.d.ts","writeByteOrderMark":false,"text":"import 'promise-polyfill';\r\nimport 'whatwg-fetch';\r\nimport { AdventEvent } from '../event';\r\nimport { AdventTransport } from '../transport';\r\nexport declare class AdventHTTPTransport implements AdventTransport {\r\n    static Construct({ uri, batchSize }: {\r\n        uri: string;\r\n        batchSize: number;\r\n    }): AdventHTTPTransport;\r\n    private writing;\r\n    private readonly uri;\r\n    private readonly batchSize;\r\n    private batch;\r\n    private constructor();\r\n    write(event: AdventEvent): void;\r\n    private getNextBatch;\r\n}\r\n//# sourceMappingURL=http.d.ts.map"}}
