{"code":"var AdventConsoleTransport = /** @class */ (function () {\r\n    function AdventConsoleTransport(throttle) {\r\n        if (throttle === void 0) { throttle = 100; }\r\n        this.throttle = throttle;\r\n    }\r\n    AdventConsoleTransport.Construct = function (_a) {\r\n        var throttle = (_a === void 0 ? {} : _a).throttle;\r\n        return new AdventConsoleTransport(throttle);\r\n    };\r\n    AdventConsoleTransport.throttledWrite = function (event, level) {\r\n        switch (level) {\r\n            case \"debug\" /* debug */: {\r\n                window.console.debug(event.message);\r\n                break;\r\n            }\r\n            case \"trace\" /* trace */: {\r\n                window.console.trace(event.message);\r\n                break;\r\n            }\r\n            case \"info\" /* info */: {\r\n                window.console.info(event.message);\r\n                break;\r\n            }\r\n            case \"warn\" /* warn */: {\r\n                window.console.warn(event.message);\r\n                break;\r\n            }\r\n            case \"error\" /* error */: {\r\n                window.console.error(event.message);\r\n                break;\r\n            }\r\n            case \"fatal\" /* fatal */: {\r\n                window.console.assert(event.message);\r\n                break;\r\n            }\r\n        }\r\n        window.console.table(event.meta);\r\n        window.console.trace(event.tags);\r\n    };\r\n    Object.defineProperty(AdventConsoleTransport.prototype, \"delta\", {\r\n        get: function () {\r\n            if (!this.writeStart) {\r\n                return 0;\r\n            }\r\n            return Math.floor(Date.now() - this.writeStart);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdventConsoleTransport.prototype, \"writable\", {\r\n        get: function () {\r\n            return this.delta >= this.throttle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdventConsoleTransport.prototype.write = function (event, level) {\r\n        if (this.writable) {\r\n            AdventConsoleTransport.throttledWrite(event, level);\r\n        }\r\n        else {\r\n            this.writeStart = Date.now();\r\n        }\r\n    };\r\n    return AdventConsoleTransport;\r\n}());\r\nexport { AdventConsoleTransport };\r\n","dtsmap":{"name":"/Users/justinbeaudry/Projects/advent/transports/console.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"console.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/transports/console.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AACvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAC/C,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAE/C,qBAAa,sBAAuB,YAAW,eAAe;WAC9C,SAAS,CAAC,EACpB,QAAQ,EACX,GAAE;QACD,QAAQ,CAAC,EAAE,MAAM,CAAA;KACb,GAAG,sBAAsB;IAG/B,OAAO,CAAC,MAAM,CAAC,cAAc;IA8B7B,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAS;IAClC,OAAO,CAAC,UAAU,CAAqB;qBAC3B,KAAK;qBAML,QAAQ;IAGpB,OAAO;IAGA,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,kBAAkB,GAAG,IAAI;CAOlE\"}"},"dts":{"name":"/Users/justinbeaudry/Projects/advent/transports/console.d.ts","writeByteOrderMark":false,"text":"import { AdventEvent } from '../event';\r\nimport { AdventLoggerLevels } from '../logger';\r\nimport { AdventTransport } from '../transport';\r\nexport declare class AdventConsoleTransport implements AdventTransport {\r\n    static Construct({ throttle }?: {\r\n        throttle?: number;\r\n    }): AdventConsoleTransport;\r\n    private static throttledWrite;\r\n    private readonly throttle;\r\n    private writeStart;\r\n    private readonly delta;\r\n    private readonly writable;\r\n    private constructor();\r\n    write(event: AdventEvent, level: AdventLoggerLevels): void;\r\n}\r\n//# sourceMappingURL=console.d.ts.map"}}
