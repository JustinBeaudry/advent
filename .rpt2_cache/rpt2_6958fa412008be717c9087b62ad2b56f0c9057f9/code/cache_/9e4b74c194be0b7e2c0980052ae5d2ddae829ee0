{"code":"import { AdventLogger } from \"./logger\";\r\nimport { AdventState } from \"./state\";\r\nimport { AdventEventStore } from \"./store\";\r\nimport { AdventEventSync } from \"./sync\";\r\nimport { AdventConsoleTransport } from \"./transports/console\";\r\nimport { AdventHTTPTransport } from \"./transports/http\";\r\nvar Advent = /** @class */ (function () {\r\n    function Advent(destinations, meta, tags) {\r\n        this.store = AdventEventStore.Construct();\r\n        this.state = AdventState();\r\n        this.destinations = destinations;\r\n        var _a = this, state = _a.state, store = _a.store;\r\n        this.sync = AdventEventSync.Construct({\r\n            destinations: destinations,\r\n            state: state,\r\n            store: store\r\n        });\r\n        this.logger = AdventLogger.Construct({\r\n            meta: meta,\r\n            store: store,\r\n            tags: tags\r\n        });\r\n    }\r\n    Advent.Construct = function (_a) {\r\n        var destinations = _a.destinations, meta = _a.meta, tags = _a.tags;\r\n        return new Advent(destinations, meta, tags);\r\n    };\r\n    Advent.prototype.getEvents = function (predicate) {\r\n        return this.store.getEvents(predicate);\r\n    };\r\n    Advent.prototype.start = function () {\r\n        this.sync.start();\r\n    };\r\n    Advent.prototype.pause = function () {\r\n        this.sync.pause();\r\n    };\r\n    Advent.prototype.setLevel = function (level) {\r\n        this.state = AdventState({ level: level }, this.state);\r\n        var _a = this, destinations = _a.destinations, state = _a.state, store = _a.store;\r\n        this.sync = AdventEventSync.Construct({\r\n            destinations: destinations,\r\n            state: state,\r\n            store: store\r\n        });\r\n    };\r\n    Advent.defaultTransports = {\r\n        Console: AdventConsoleTransport,\r\n        Http: AdventHTTPTransport\r\n    };\r\n    return Advent;\r\n}());\r\nexport default Advent;\r\n","dtsmap":{"name":"/Users/justinbeaudry/Projects/advent/advent.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"advent.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/advent.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AACtC,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAE5D,OAAO,EAAoB,oBAAoB,EAAE,MAAM,SAAS,CAAC;AACjE,OAAO,EAAE,8BAA8B,EAAmB,MAAM,QAAQ,CAAC;AAIzE,MAAM,WAAW,qBAAqB;IACpC,YAAY,EAAE,8BAA8B,EAAE,CAAC;IAC/C,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC;CACjB;AAED,MAAM,CAAC,OAAO,OAAO,MAAM;IACzB,OAAc,iBAAiB,EAAE;QAC/B,OAAO,EAAE,MAAM,CAAC;QAChB,IAAI,EAAE,MAAM,CAAA;KACb,CAGC;WACY,SAAS,CAAC,EACtB,YAAY,EACZ,IAAI,EACJ,IAAI,EACL,EAAE,qBAAqB,GAAG,MAAM;IAG1B,MAAM,EAAE,YAAY,CAAC;IAC5B,OAAO,CAAC,IAAI,CAAkB;IAC9B,OAAO,CAAC,KAAK,CAAkD;IAC/D,OAAO,CAAC,KAAK,CAA8B;IAC3C,OAAO,CAAC,YAAY,CAAmC;IACvD,OAAO;IAkBA,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,oBAAoB,KAAK,OAAO,GAAG,WAAW,EAAE;IAG7E,KAAK;IAGL,KAAK;IAGL,QAAQ,CAAC,KAAK,EAAE,kBAAkB,GAAG,IAAI;CAYjD\"}"},"dts":{"name":"/Users/justinbeaudry/Projects/advent/advent.d.ts","writeByteOrderMark":false,"text":"import { AdventEvent } from \"./event\";\r\nimport { AdventLogger, AdventLoggerLevels } from \"./logger\";\r\nimport { AdventEventStoreItem } from \"./store\";\r\nimport { AdventDestinationConfiguration } from \"./sync\";\r\nexport interface AdventConstructParams {\r\n    destinations: AdventDestinationConfiguration[];\r\n    meta?: object;\r\n    tags?: string[];\r\n}\r\nexport default class Advent {\r\n    static defaultTransports: {\r\n        Console: object;\r\n        Http: object;\r\n    };\r\n    static Construct({ destinations, meta, tags }: AdventConstructParams): Advent;\r\n    logger: AdventLogger;\r\n    private sync;\r\n    private store;\r\n    private state;\r\n    private destinations;\r\n    private constructor();\r\n    getEvents(predicate?: (item: AdventEventStoreItem) => boolean): AdventEvent[];\r\n    start(): void;\r\n    pause(): void;\r\n    setLevel(level: AdventLoggerLevels): void;\r\n}\r\n//# sourceMappingURL=advent.d.ts.map"}}
