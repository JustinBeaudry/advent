{"code":"import * as tslib_1 from \"tslib\";\r\nvar AdventEventStore = /** @class */ (function () {\r\n    function AdventEventStore() {\r\n        this.eventIndex = new Map();\r\n        this.tagsIndex = new Map();\r\n    }\r\n    AdventEventStore.Construct = function () {\r\n        return new AdventEventStore();\r\n    };\r\n    AdventEventStore.prototype.addEvent = function (event) {\r\n        var storeItem = {\r\n            event: event,\r\n            seen: false\r\n        };\r\n        this.eventIndex.set(event.id, storeItem);\r\n        this.addIndexes(storeItem);\r\n    };\r\n    AdventEventStore.prototype.markEventSeen = function (eventId) {\r\n        var event = this.eventIndex.get(eventId);\r\n        if (event) {\r\n            event.seen = true;\r\n            this.eventIndex.set(eventId, event);\r\n        }\r\n    };\r\n    AdventEventStore.prototype.getEventById = function (id) {\r\n        var item = this.eventIndex.get(id);\r\n        if (item) {\r\n            return item.event;\r\n        }\r\n        return null;\r\n    };\r\n    AdventEventStore.prototype.getEventsByTag = function (tag) {\r\n        var tags = this.tagsIndex.get(tag);\r\n        if (!tags) {\r\n            return [];\r\n        }\r\n        return Array.from(tags)\r\n            .filter(function (item) { return item !== null; })\r\n            .map(function (item) { return item.event; });\r\n    };\r\n    AdventEventStore.prototype.getEvents = function (predicate) {\r\n        return Array.from(this.eventIndex.values())\r\n            .filter(function (item) {\r\n            if (predicate && item != null) {\r\n                return predicate(item);\r\n            }\r\n            return item != null;\r\n        })\r\n            .map(function (item) { return item.event; });\r\n    };\r\n    AdventEventStore.prototype.getTags = function () {\r\n        return Array.from(this.tagsIndex.keys());\r\n    };\r\n    AdventEventStore.prototype.flush = function () {\r\n        this.eventIndex = new Map();\r\n        this.tagsIndex = new Map();\r\n    };\r\n    AdventEventStore.prototype.addIndexes = function (item) {\r\n        var e_1, _a;\r\n        if (item.event.tags.size > 0) {\r\n            try {\r\n                for (var _b = tslib_1.__values(item.event.tags), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var tag = _c.value;\r\n                    var tagIndex = this.tagsIndex.get(tag);\r\n                    if (!tagIndex) {\r\n                        tagIndex = new Set();\r\n                    }\r\n                    tagIndex.add(item);\r\n                    this.tagsIndex.set(tag, tagIndex);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    return AdventEventStore;\r\n}());\r\nexport { AdventEventStore };\r\n","dtsmap":{"name":"/Users/justinbeaudry/Projects/advent/store.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"store.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/store.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAEtC,MAAM,WAAW,oBAAoB;IACnC,KAAK,EAAE,WAAW,CAAC;IACnB,IAAI,EAAE,OAAO,CAAC;CACf;AAED,qBAAa,gBAAgB;WACb,SAAS,IAAI,gBAAgB;IAG3C,OAAO,CAAC,UAAU,CAAgD;IAClE,OAAO,CAAC,SAAS,CAAqD;IACtE,OAAO;IACA,QAAQ,CAAC,KAAK,EAAE,WAAW,GAAG,IAAI;IAQlC,aAAa,CAAC,OAAO,EAAE,MAAM,GAAG,IAAI;IAOpC,YAAY,CAAC,EAAE,EAAE,MAAM,GAAG,WAAW,GAAG,IAAI;IAO5C,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,WAAW,EAAE;IAS1C,SAAS,CACd,SAAS,CAAC,EAAE,CAAC,IAAI,EAAE,oBAAoB,KAAK,OAAO,GAClD,WAAW,EAAE;IAUT,OAAO,IAAI,MAAM,EAAE;IAGnB,KAAK,IAAI,IAAI;IAIpB,OAAO,CAAC,UAAU;CAYnB\"}"},"dts":{"name":"/Users/justinbeaudry/Projects/advent/store.d.ts","writeByteOrderMark":false,"text":"import { AdventEvent } from './event';\r\nexport interface AdventEventStoreItem {\r\n    event: AdventEvent;\r\n    seen: boolean;\r\n}\r\nexport declare class AdventEventStore {\r\n    static Construct(): AdventEventStore;\r\n    private eventIndex;\r\n    private tagsIndex;\r\n    private constructor();\r\n    addEvent(event: AdventEvent): void;\r\n    markEventSeen(eventId: string): void;\r\n    getEventById(id: string): AdventEvent | null;\r\n    getEventsByTag(tag: string): AdventEvent[];\r\n    getEvents(predicate?: (item: AdventEventStoreItem) => boolean): AdventEvent[];\r\n    getTags(): string[];\r\n    flush(): void;\r\n    private addIndexes;\r\n}\r\n//# sourceMappingURL=store.d.ts.map"}}
